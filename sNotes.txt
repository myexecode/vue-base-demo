1, 移动端适配方案：（同react类似）
    1 设置html根标签字号，以750设计稿为例(注意设置完毕，要给body设置默认字体一般是32px,否则页面默认字体会很大)
			// designWith-设计稿尺寸
			function setHtmlFontSizeFn(designWith) {
			let resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize';

			function recalc(){
				let htmlWidth = document.documentElement.clientWidth || document.body.clientWidth;
				let htmlDom = document.getElementsByTagName('html')[0];
				htmlDom.style.fontSize = 100 * (htmlWidth / designWith) + 'px';
			};

			window.addEventListener(resizeEvt, recalc, false);
			document.addEventListener('DOMContentLoaded', recalc, false);
			}
			setHtmlFontSizeFn(750); // js动态设置根标签fontsize
		或：
		<style>
			html{
				font-size: calc(100vw/750 * 100);
			}
		</style>

	2，	利用sass函数把px转成rem
			@function px2rem($px){
				$rem : 100px;
				@return ($px / $rem) + rem;
			}
		或：
			安装postcss-pxtorem插件
				github地址：https://github.com/cuth/postcss-pxtorem
            在根目录下创建postcss.config.js（如果有就不用创建了）
                添加如下配置
                    module.exports = () => ({
                        plugins: [
                            require('autoprefixer')(),
                            // require(‘postcss-px2rem‘)({ remUnit: 75 })
                            require('postcss-pxtorem')({
                                rootValue: 100,
                                propList: ['*']
                            })
                        ]
                    });

                    配置参数：
                        rootValue （Number）根元素字体大小。
                        unitPrecision （数字）允许REM单位增长的十进制数。
                        propList （数组）可以从px更改为rem的属性。 值必须完全匹配。 使用通配符*启用所有属性。例：[‘*‘] *在单词的开头或结尾使用。（[‘*position*‘]会匹配background-position-y）
                            用于!与属性不匹配。例：[‘*‘, ‘!letter-spacing‘] 将“not”前缀与其他前缀组合在一起。例：[‘*‘, ‘!font*‘]
                        selectorBlackList （数组）要忽略的选择器并保留为px。 如果value是string，则检查selector是否包含字符串。 [‘body‘] 会匹配 .body-class
                            如果value是regexp，它会检查选择器是否与正则表达式匹配。
                            [/^body$/]会匹配body但不会.body
                        replace （布尔值）替换包含rems的规则，而不是添加回退。
                        mediaQuery （布尔值）允许在媒体查询中转换px。
                        minPixelValue （数字）设置要替换的最小像素值。

2, 接口请求ajax插件 axios 安装
	cnpm install axios --save

3, vue cli3 脚手架自定义配置：
	VueCli3全新小白入门教程(基础+实战+vue+fetch+axios+米斯特吴)
	（视频教程地址：https://ke.qq.com/course/452954?taid=4139622624323930）
	module.exports = {
		baseUrl: '/', // 根路径
		outputDir: '', // 构建输出目录
		assetsDir: 'assets', // 静态资源目录
		lintOnSave: false, // 是否开启eslint保存检查 true / false / error
		devServer: {
			open: true, // 是否 热自动打开页面
			host: 'localhost',
			port: 8080,
			https: false,
			hotOnly: false,
			proxy: {
				// 配置跨域
				'/api' : {
					target: '', //真实的api地址
					ws: true, // 是否代理 websockets
					changOrigin: true, // 将主机标头的原点更改为目标URL
					pathRewrite: {
						'^/api': '' // 去除掉多余的api。如：http://localhost:8080/api/admin/login -> http://xxx.com:2086/admin/login
					}
				}
			}
		}
	}

4， scss样式穿透 （可以在添加了scoped作用域的组件中，修改ui库或第三方组件的样式）
	vue中css样式局部化，sass和stylus穿透
	- <style lang='scss' scoped>
		父元素 /deep/ 子元素
	  </style>
	- <style lang='stylus' scoped>
		父元素 >>> 子元素
	  </style>

5， fastClick插件可以解决移动端click有300ms延迟的问题。

6，vue2-animate.css vue中的css动画库
	npm i vue2-animate -S